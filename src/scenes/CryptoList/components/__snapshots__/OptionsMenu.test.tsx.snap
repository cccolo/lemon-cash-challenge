// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionsMenu Component matches snapshot 1`] = `
[
  <View
    style={
      {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "alignSelf": "flex-end",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 12,
          }
        }
      >
        Ver favoritos
      </Text>
      <RCTSwitch
        accessibilityRole="switch"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="rgb(0, 240, 104)"
        style={
          [
            {
              "height": 31,
              "width": 51,
            },
            [
              {
                "transform": [
                  {
                    "scaleX": 0.8,
                  },
                  {
                    "scaleY": 0.8,
                  },
                ],
              },
              {
                "backgroundColor": "#3e3e3e",
                "borderRadius": 16,
              },
            ],
          ]
        }
        testID="toggle-switch"
        thumbTintColor="#f4f3f4"
        tintColor="#767577"
        value={false}
      />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "opacity": 1,
          "paddingLeft": 10,
        }
      }
      testID="toggle-button"
    >
      <svgMock />
    </View>
  </View>,
  <View
    collapsable={false}
    style={
      {
        "height": 0,
        "marginTop": 10,
        "opacity": 0,
        "overflow": "hidden",
      }
    }
    testID="menu-container"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "borderColor": "white",
            "borderRadius": 5,
            "borderWidth": 1,
            "color": "white",
            "flex": 1,
            "flexDirection": "row",
            "height": 40,
            "marginBottom": 10,
            "paddingLeft": 10,
          }
        }
      >
        <svgMock />
        <TextInput
          onChangeText={[Function]}
          placeholder="Ingresa nombre o simbolo"
          placeholderTextColor="white"
          style={
            {
              "color": "white",
              "maxWidth": 260,
              "paddingLeft": 10,
            }
          }
          testID="input"
          value=""
        />
        <View
          style={
            {
              "alignItems": "flex-end",
              "flex": 1,
              "marginRight": 12,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="cancel-button"
          >
            <svgMock
              style={
                {
                  "color": "white",
                  "textAlign": "right",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>,
]
`;
